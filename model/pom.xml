<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>gmall-parent</artifactId>
        <groupId>com.atguigu.gmall</groupId>
        <version>1.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>model</artifactId>
    <description>所有模型</description>
<!--
xxO(Object)?对象。万物皆对象; 领域标识；   领域对象模型
DO: Data/Database Object：数据对象。
DAO：Database Access Object: 访问数据库的对象。 xxxDao
DTO：Data Transfer Object： 数据传输对象；方法调用进行传输的 a.b(xxxx)
VO：View/Value Object：视图/值对象；封装请求/响应数据的对象。
TO：Transfer Object：远程调用进行传输的；
POJO：Plain Ordinary Java Object：简单Java对象，里面只有getter/setter
...... 推荐：每个对象都有自己的领域标识。好区分它们干什么。
业务： 用户注册/登录
浏览器发请求 == 用户名/密码 == 【UserVo、UserController、UserDTO、UserService、UserDao、UserEntity】
User： 只有这么一个对象封装数据。
t_user(id,username,email,password,age) === User(id,username,email,password,age) == 页面
1）、user.setPassword(null)   2）、UserVo(id,username,email,age) ===脱敏=== 页面
-->
    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

        <!--mybatis-plus-->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <scope>provided</scope>
        </dependency>

        <!--swagger-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

</project>